name: CI Workflow

on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the main branch
  pull_request:
    branches:
      - main  # Trigger the workflow on pull requests to the main branch

jobs:
  build-and-test:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner for GitHub Actions

    steps:
    - uses: actions/checkout@v3  # Check out the repository code
    - name: Set up Python
      uses: actions/setup-python@v4  # Set up Python environment
      with:
        python-version: 3.12  # Specify Python version

    - name: Build Docker Image
      run: docker build -t pytest_runner .  # Build Docker image with the specified Dockerfile

    - name: Run Tests in Docker
      run: |
        docker run --name pets_store_tests \  # Run tests in the Docker container
          -v ${{ github.workspace }}/test_results:/tests_project/test_results \  # Mount test results directory for Allure
          pytest_runner
      continue-on-error: true  # Allow the job to proceed even if tests fail

    - name: List test results
      if: always()  # Run this step regardless of previous step success/failure
      run: ls -lR ./test_results  # List contents of test_results directory to verify output

    - name: Set up JDK 17
      if: always()  # Always execute this step, required for Allure report generation
      uses: actions/setup-java@v3  # Set up Java environment
      with:
        distribution: 'temurin'  # Specify the Java distribution
        java-version: '17'  # Java version required for Allure

    - name: Install Allure
      if: always()  # Always execute this step, installs Allure CLI for report generation
      run: npm install -g allure-commandline

    - name: Generate Allure Report
      if: always()  # Always execute, even if tests failed, to generate a report
      run: allure generate ./test_results -o ./test_results/allure-report --clean  # Generate report in allure-report folder

    - name: Deploy to GitHub Pages
      if: always()  # Publish report even if tests failed
      uses: peaceiris/actions-gh-pages@v3  # Deploy Allure report to GitHub Pages
      with:
        github_token: ${{ secrets.MY_GITHUB_TOKEN }}  # Use token for authentication
        publish_dir: ./test_results/allure-report  # Directory to publish on GitHub Pages
